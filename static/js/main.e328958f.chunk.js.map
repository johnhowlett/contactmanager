{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","protoType","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","palceholder","onChange","error","htmlFor","classnames","is-invalid","placeholder","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","playload","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e328958f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      {\n        id: 1,\n        name: \"John Doe\",\n        email: \"jdoe@gmail.com\",\n        phone: \"555-555-5555\"\n      },\n      {\n        id: 2,\n        name: \"Karen Williams\",\n        email: \"karen@gmail.com\",\n        phone: \"222-222-2222\"\n      },\n      {\n        id: 3,\n        name: \"Henry Johnson\",\n        email: \"henry@gmail.com\",\n        phone: \"111-111-1111\"\n      }\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/{id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch {\n      // only try catch we have no backend server!\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"poniter\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.protoType = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  palceholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={palceholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // TODO -> Check all and give the hit\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      //id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // clear state after submit\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name ...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email ...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone ...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // TODO -> Check all and give the hit\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", playload: res.data });\n\n    // clear state after submit\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name ...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email ...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone ...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 0.6.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n//registerServiceWorker();\nserviceWorker.unregister();\n"],"sourceRoot":""}